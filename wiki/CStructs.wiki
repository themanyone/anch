#summary Declaring a struct with Anchor

Most of the time Anchor does a good job, but there are exceptions. Here is how to use "an extra space" to trick it into accepting an extra semicolon.

{{{
struct list_e
    struct list_e *next
    char *data
; 
}}}
Notice that there is a space after the ";" in the above code.

The extra space prevents Anchor from seeing the extra semicolon and removing it.

You could also create a variable of type "struct list_e" instead:

{{{
struct list_e
    struct list_e *next
    char *data

mylist;
}}}

The extra semicolon and space is not necessary anymore because Anchor sees the variable and automatically puts a semicolon after it. The output looks like this:

{{{
struct list_e{
    struct list_e *next;
    char *data;
    }
mylist;
}}}

See? We have created a variable of type "struct list_e" that could be used, oh I don't know, for storing part of a list during a swap of elements?